# Taskfile.yaml

version: "3"

vars:
  PY_SCRIPT: python3 scripts/generate_json.py
  VITE_DEV: npm run dev
  VITE_BUILD: npm run build
  NPM_INSTALL: npm install

tasks:
  # ----------------------------------------------------
  # 1. SETUP AND INSTALLATION
  # ----------------------------------------------------
  setup:
    desc: Install all Node and Python dependencies.
    cmds:
      - echo "--- Installing Node Dependencies ---"
      - "{{.NPM_INSTALL}}"
      - echo "--- Checking Python Dependencies (Add 'pip install -r requirements.txt' if you have one) ---"

  # ----------------------------------------------------
  # 2. DATA MANAGEMENT (Daily Update)
  # ----------------------------------------------------
  data:
    desc: Regenerate the src/products.json file from the source CSV.
    cmds:
      - echo "--- Regenerating Static JSON Data ---"
      - "{{.PY_SCRIPT}}"

  check-deps:
    desc: Checks if node_modules exists and installs dependencies if missing.
    status:
      - test -d node_modules # Checks if the node_modules directory exists
    cmds:
      - echo "Dependencies missing. Running 'npm install'..."
      - "{{.NPM_INSTALL}}"
      - echo "Dependencies checked."

  # ----------------------------------------------------
  # 2. UPDATED DEV TASK
  # ----------------------------------------------------
  dev:
    desc: Regenerate data and start the Vite development server (with HMR).
    deps:
      - check-deps # Check dependencies first
      - data # Ensure the latest data is present
    cmds:
      - echo "--- Starting Vite Development Server ---"
      - "{{.VITE_DEV}}"

  test:
    desc: Run all unit and integration tests once.
    cmds:
      - echo "--- Running Unit & Integration Tests ---"
      - npm run test

  test:e2e:
    desc: Run all end-to-end tests once.
    cmds:
      - echo "--- Running End-to-End Tests ---"
      - npm run test:e2e

  test:all:
    desc: Run all unit, integration, and end-to-end tests.
    cmds:
      - task: test
      - task: test:e2e

  watch:
    desc: Start Vitest in watch mode (ideal for TDD).
    cmds:
      - echo "--- Starting Vitest Watch Mode ---"
      - npm run test:watch

  # ----------------------------------------------------
  # 4. DEPLOYMENT BUILD
  # ----------------------------------------------------
  build:
    desc: Generate final optimized data and create the production build artifacts (in the 'dist' folder).
    deps:
      - data # Ensure the data is fresh
    cmds:
      - echo "--- Creating Production Build (Tailwind, JS, CSS optimized) ---"
      - "{{.VITE_BUILD}}"

  # ----------------------------------------------------
  # 5. VERSIONING
  # ----------------------------------------------------
  version:patch:
    desc: "Bump the patch version (e.g., 0.1.0 -> 0.1.1)"
    cmds:
      - npm version patch

  version:minor:
    desc: "Bump the minor version (e.g., 0.1.0 -> 0.2.0)"
    cmds:
      - npm version minor

  version:major:
    desc: "Bump the major version (e.g., 0.1.0 -> 1.0.0)"
    cmds:
      - npm version major

  # ----------------------------------------------------
  # 6. CLEANUP
  # ----------------------------------------------------
  clean:
    desc: Remove node_modules, package-lock, and the dist folder.
    cmds:
      - rm -rf node_modules package-lock.json dist
      - echo "Cleaned up project files."
